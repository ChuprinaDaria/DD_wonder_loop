from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Bot
from typing import Optional


def get_main_keyboard() -> ReplyKeyboardMarkup:
    """–ì–æ–ª–æ–≤–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚úâÔ∏è –î–æ–¥–∞—Ç–∏ –ª–æ—Ç")],
            [KeyboardButton(text="üìÉ –ú–æ—ó –ª–æ—Ç–∏"), KeyboardButton(text="‚úçÔ∏è –ü—Ä–∞–≤–∏–ª–∞")],
        ],
        resize_keyboard=True,
        persistent=True
    )
    return keyboard

def get_phone_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Ç—É –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)],
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboard

def get_cancel_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑—ñ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è–º"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")],
        ],
        resize_keyboard=True
    )
    return keyboard

def get_skin_type_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–∏–ø—É —à–∫—ñ—Ä–∏"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–°—É—Ö–∞"), KeyboardButton(text="–ñ–∏—Ä–Ω–∞")],
            [KeyboardButton(text="–ö–æ–º–±—ñ–Ω–æ–≤–∞–Ω–∞"), KeyboardButton(text="–ù–æ—Ä–º–∞–ª—å–Ω–∞")],
            [KeyboardButton(text="–ß—É—Ç–ª–∏–≤–∞"), KeyboardButton(text="–í—Å—ñ —Ç–∏–ø–∏")],
            [KeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboard

def get_category_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üß¥ –î–æ–≥–ª—è–¥ –∑–∞ –æ–±–ª–∏—á—á—è–º"),KeyboardButton(text="üßº –î–æ–≥–ª—è–¥ –∑–∞ —Ç—ñ–ª–æ–º")],
            [KeyboardButton(text="üíÜ‚Äç‚ôÄÔ∏è –î–æ–≥–ª—è–¥ –∑–∞ –≤–æ–ª–æ—Å—Å—è–º"),KeyboardButton(text="‚öôÔ∏è –ì–∞–¥–∂–µ—Ç–∏"),],
            [KeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboard

def get_city_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –º—ñ—Å—Ç"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ö–∏—ó–≤"), KeyboardButton(text="–•–∞—Ä–∫—ñ–≤")],
            [KeyboardButton(text="–û–¥–µ—Å–∞"), KeyboardButton(text="–î–Ω—ñ–ø—Ä–æ")],
            [KeyboardButton(text="–õ—å–≤—ñ–≤"), KeyboardButton(text="–ó–∞–ø–æ—Ä—ñ–∂–∂—è")],
            [KeyboardButton(text="–í—ñ–Ω–Ω–∏—Ü—è"), KeyboardButton(text="–Ü–Ω—à–µ –º—ñ—Å—Ç–æ")],
            [KeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboard

def get_exchange_or_sell_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîÑ–û–±–º—ñ–Ω")],
            [KeyboardButton(text="üí∏–ü—Ä–æ–¥–∞–∂")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )



def get_delivery_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–æ—Å–æ–±—ñ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì¶ –ù–æ–≤–∞ –ü–æ—à—Ç–∞"), KeyboardButton(text="üìÆ –£–∫—Ä–ø–æ—à—Ç–∞")],
            [KeyboardButton(text="üöó –°–∞–º–æ–≤–∏–≤—ñ–∑"), KeyboardButton(text="üöö –ö—É—Ä'—î—Ä")],
            [ KeyboardButton(text="üí¨ –î–æ–º–æ–≤–∏–º–æ—Å—å")],
            [KeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboard

def get_confirm_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ª–æ—Ç—É"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏", callback_data="confirm_lot"),
                
            ],
            [
                InlineKeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="cancel")
            ]
        ]
    )
    return keyboard

def get_moderation_keyboard(lot_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü—ñ—ó"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –°—Ö–≤–∞–ª–∏—Ç–∏", callback_data=f"mod_approve_{lot_id}"),
                InlineKeyboardButton(text="‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏", callback_data=f"mod_reject_{lot_id}")
            ],
            [
                InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏", callback_data=f"mod_edit_{lot_id}")
            ]
        ]
    )
    return keyboard

def get_contact_seller_keyboard(user_id: int, username: Optional[str] = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –∑–≤'—è–∑–∫—É –∑ –ø—Ä–æ–¥–∞–≤—Ü–µ–º (–∞–¥–∞–ø—Ç–æ–≤–∞–Ω–∞ –ø—ñ–¥ –¥–µ—Å–∫—Ç–æ–ø —ñ –º–æ–±—ñ–ª–∫–∏)"""
    if username:
        url = f"https://t.me/{username}"
    else:
        url = f"tg://user?id={user_id}"  # fallback –¥–ª—è –º–æ–±—ñ–ª–æ–∫ –±–µ–∑ username

    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí¨ –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –ø—Ä–æ–¥–∞–≤—Ü–µ–º",
                    url=url
                )
            ]
        ]
    )


def get_status_buttons(lot_id: int, current_status: str) -> InlineKeyboardMarkup:
    buttons = []

    if current_status == 'active':
        buttons.append(InlineKeyboardButton(text="üîÅ –ó–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–æ", callback_data=f"status:reserved:{lot_id}"))
        buttons.append(InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–¥–∞–Ω–æ", callback_data=f"status:sold:{lot_id}"))

    return InlineKeyboardMarkup(inline_keyboard=[buttons])

def status_human(status: str) -> str:
    mapping = {
        "active": "–ê–∫—Ç–∏–≤–Ω–∏–π",
        "reserved": "–ó–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–æ",
        "sold": "–ü—Ä–æ–¥–∞–Ω–æ",
        "inactive": "–ù–µ–∞–∫—Ç—É–∞–ª—å–Ω–∏–π"  # ‚Üê –¥–æ–¥–∞—î–º–æ —Å—é–¥–∏
    }
    return mapping.get(status, "–ù–µ–≤—ñ–¥–æ–º–æ")


async def render_stars(user_id: int, bot: Bot) -> str:
    rating = await bot.db.get_user_rating(user_id)

    if rating is None:
        return "‚≠êÔ∏è –ù–µ–º–∞—î –æ—Ü—ñ–Ω–æ–∫"

    full_stars = int(round(rating))  # –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è –¥–æ –Ω–∞–π–±–ª–∏–∂—á–æ–≥–æ —Ü—ñ–ª–æ–≥–æ
    empty_stars = 5 - full_stars

    stars = "‚≠êÔ∏è" * full_stars + "‚ñ´Ô∏è" * empty_stars
    return f"üë§ –†–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ–¥–∞–≤—Ü—è:\n{stars} ({rating:.1f}/5)"




